#ifndef OUTPOSTS_H
#define OUTPOSTS_H

#include "eval.h"

//various OUTPOSTS PSQT are defined here

/**
 * @brief [color][sqv] 
 */ 
const int KNIGHT_PROT_OUTPOST_BLACK[64] = {
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
           gS(0,3), gS(5,4), gS(0,4), gS(0,-3), gS(12,0), gS(0,3), gS(0,0), gS(0,0),
           gS(21,15), gS(3,41), gS(24,21), gS(18,23), gS(11,30), gS(31,29), gS(23,43), gS(28,15),
           gS(16,17), gS(28,18), gS(31,22), gS(32,29), gS(44,30), gS(39,27), gS(45,19), gS(16,18),
           gS(11,16), gS(19,17), gS(30,18), gS(41,20), gS(40,19), gS(31,12), gS(23,14), gS(10,13),
           gS(-3,7), gS(4,-2), gS(1,1), gS(9,0), gS(10,-1), gS(2,8), gS(0,0), gS(-9,1),
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
};

const int BISHOP_PROT_OUTPOST_BLACK[64] = {
           gS(0,0), gS(0,0), gS(0,-1), gS(0,-1), gS(0,-4), gS(0,0), gS(0,0), gS(0,0),
           gS(0,1), gS(14,0), gS(6,-10), gS(0,-12), gS(1,-12), gS(2,-2), gS(16,1), gS(0,-1),
           gS(-4,3), gS(29,5), gS(17,-4), gS(35,-7), gS(31,-5), gS(51,-7), gS(33,13), gS(-5,0),
           gS(7,1), gS(28,11), gS(38,-2), gS(45,4), gS(48,1), gS(45,4), gS(35,16), gS(0,5),
           gS(-3,2), gS(32,12), gS(43,4), gS(51,6), gS(50,8), gS(38,9), gS(32,13), gS(-6,0),
           gS(0,6), gS(9,14), gS(8,13), gS(11,15), gS(14,7), gS(6,4), gS(13,12), gS(-7,2),
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
};

const int KNIGHT_OUTPOST_BLACK[64] = {
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
           gS(9,1), gS(14,6), gS(17,5), gS(19,4), gS(17,3), gS(21,7), gS(16,6), gS(2,1),
           gS(8,5), gS(15,5), gS(23,11), gS(32,13), gS(38,14), gS(31,13), gS(18,6), gS(12,9),
           gS(4,2), gS(4,3), gS(17,9), gS(22,18), gS(28,13), gS(14,5), gS(4,2), gS(6,4),
           gS(-2,3), gS(6,9), gS(7,13), gS(7,14), gS(7,13), gS(8,12), gS(3,3), gS(0,3),
           gS(-4,1), gS(0,3), gS(-2,9), gS(-3,11), gS(0,4), gS(-3,4), gS(0,1), gS(-10,0),
           gS(-1,0), gS(-6,0), gS(-3,2), gS(-4,0), gS(-4,0), gS(-3,0), gS(-1,0), gS(-2,0),
};

const int BISHOP_OUTPOST_BLACK[64] = {
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
           gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0), gS(0,0),
           gS(9,4), gS(11,4), gS(16,6), gS(16,3), gS(14,2), gS(19,10), gS(11,6), gS(0,6),
           gS(12,7), gS(14,5), gS(17,9), gS(24,11), gS(23,10), gS(17,8), gS(15,7), gS(11,8),
           gS(5,5), gS(8,4), gS(16,11), gS(22,14), gS(23,14), gS(16,9), gS(8,6), gS(4,4),
           gS(3,8), gS(4,11), gS(4,11), gS(3,14), gS(5,12), gS(2,7), gS(2,5), gS(-3,4),
           gS(-3,3), gS(-6,5), gS(0,10), gS(-3,12), gS(0,10), gS(0,3), gS(2,0), gS(-4,1),
           gS(4,7), gS(0,6), gS(-1,5), gS(1,8), gS(1,5), gS(-4,0), gS(0,2), gS(-2,3),
};






















#endif